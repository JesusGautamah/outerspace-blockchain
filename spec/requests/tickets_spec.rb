# frozen_string_literal: true

require "rails_helper"

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/tickets", type: :request do
  let(:chain) { create(:chain) }
  let(:block) { create(:block, chain: chain) }
  let(:pool) { create(:pool, block: block) }
  let(:user) { create(:user) }
  let(:valid_attributes) { { user_id: user.id, pool_id: pool.id, status: 1, time_ref: "2021-09-01 15:00:00" } }
  let(:invalid_attributes) { { user_id: "user.id", pool_id: "pool.id", status: 0, time_ref: "2021-09-01 15:00:00" } }

  describe "GET /index" do
    it "renders a successful response" do
      Ticket.create! valid_attributes
      get tickets_url
      expect(response).to_not be_successful
    end
  end

  describe "GET /show" do
    it "renders a successful response" do
      ticket = Ticket.create! valid_attributes
      get ticket_url(ticket)
      expect(response).to_not be_successful
    end
  end
end
